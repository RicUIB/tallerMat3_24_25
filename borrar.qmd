---
title: "Untitled"
format: html
editor: visual
---


```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
# packages
library(tidyverse)
```


# Carga de datos


Leeremos los datos que  ya hemos guardado en la carpeta data para las zonas: 
Albany, Mallorca, Menorca y  Valencia. Para los scrappings disponibles en   
[Inside Airbnb](https://insideairbnb.com/)  el 14-11-2024;  en este enlace  
se dispones de más información sobre los variables en 
[get-the-data](https://insideairbnb.com/get-the-data/). Cada Carpeta de la zona 
contiene para cada fecha en las que se recogieron los datos una  carpeta con  
varios ficheros. Por ejemplo para Menorca tenemos las  muestras en 4 
periodos de tiempo: 


```{r}
dir("data/menorca")
```
En cada carpeta, por ejemplo la primera, tenemos los mismos ficheros.


```{r}
dir("data/menorca/2023-09-25/")
```

## Carga de datos del fichero listings.csv.gz

El archivo `listings.csv.gz` es un fichero csv comprimido. 
Descomprimido ocupa bastante espacio sí que lo leeremos con la función 
`read_csv` que ya descomprime los archivos `gz`.

Cargado o leyendo el archivo  varias veces  los tipos de datos adecuados  
con los que leeremos con el siguiente código:


```{r}
listings0 <- read_csv("data/menorca/2023-09-25/listings.csv.gz")
glimpse(listings0)
```


Releemos dando formato adecuado, por ejemplo las  fechas las leemos como `Date` 
y no como `character`, los id como `character` y no cómo `numeric`.
Algunas variables llevan símbolos `$` o `%` que  los leemos como `character` y  
hay que convertirlos a `numeric` como sucede con `price`,
`host_response_rate` o `host_acceptance_rate`. También hay otras variables 
lógicas.  El lector verá en el código 
cómo hemos parseado las variables.   Volvemos a leer el archivo de forma más 
adecuada (aunque no perfecta):               


````{r}
listings1<- read_csv("data/menorca/2023-09-25/listings.csv.gz",
col_types = cols(                         
id =col_character(),
listing_url =col_character(),
scrape_id =col_character(),
last_scraped =col_date(format = "%Y%m%d"),
source =col_character(),
name =col_character(),
description =col_character(),
neighborhood_overview =col_character(),
picture_url =col_character(),
host_id =col_character(),
host_url =col_character(),
host_name =col_character(),
host_since =col_date(format = "%Y%m%d"),
host_location =col_character(),
host_about =col_character(),
host_response_time =col_number(),
host_response_rate =col_number(),
host_acceptance_rate =col_number(),
host_is_superhost =col_logical(),
host_thumbnail_url =col_character(),
host_picture_url =col_character(),
host_neighbourhood =col_character(),
host_listings_count =col_number(),
host_total_listings_count =col_number(),
host_verifications =col_character(),
host_has_profile_pic =col_logical(),
host_identity_verified =col_logical(),
neighbourhood =col_character(),
neighbourhood_cleansed =col_character(),
neighbourhood_group_cleansed =col_character(),
latitude =col_number(),
longitude =col_number(),
property_type =col_character(),
room_type =col_character(),
accommodates =col_number(),
bathrooms =col_logical(),
bathrooms_text =col_character(),
bedrooms =col_number(),
beds =col_number(),
amenities =col_character(),
price =col_number(),
minimum_nights =col_number(),
maximum_nights =col_number(),
minimum_minimum_nights =col_number(),
maximum_minimum_nights =col_number(),
minimum_maximum_nights =col_number(),
maximum_maximum_nights =col_number(),
minimum_nights_avg_ntm =col_number(),
maximum_nights_avg_ntm =col_number(),
calendar_updated =col_logical(),
has_availability =col_logical(),
availability_30 =col_number(),
availability_60 =col_number(),
availability_90 =col_number(),
availability_365 =col_number(),
calendar_last_scraped =col_date(format = "%Y%m%d"),
number_of_reviews =col_number(),
number_of_reviews_ltm =col_number(),
number_of_reviews_l30d =col_number(),
first_review =col_date(format = "%Y%m%d"),
last_review =col_date(format = "%Y%m%d"),
review_scores_rating =col_number(),
review_scores_accuracy =col_number(),
review_scores_cleanliness =col_number(),
review_scores_checkin =col_number(),
review_scores_communication =col_number(),
review_scores_location =col_number(),
review_scores_value =col_number(),
license =col_character(),
instant_bookable =col_logical(),
calculated_host_listings_count =col_number(),
calculated_host_listings_count_entire_homes =col_number(),
calculated_host_listings_count_private_rooms =col_number(),
calculated_host_listings_count_shared_rooms =col_number(),
reviews_per_month =col_number()))

```

Como vemos  hay  incidencias en observaciones que afectan a las columnas 
algunas conlumnas que podemos ver con la función `problems(listings1)`

Omitiremos las columnas con problemas para esta práctica.  De hecho vamos a reducir las columnas con las que trabajamos, por ejemplo seleccionamos las columnas:



```{r}
listings2 <- listings1 %>% select(
  id,
  price,
  longitude,
  latitude,
  property_type,
  room_type,
  accommodates,
  bedrooms,
  beds,
  amenities,
  number_of_reviews,
  review_scores_rating,
  review_scores_value,
  latitude,
  longitude,
  host_is_superhost,
  host_name
)
```


Ahora tenemos

```{r}
glimpse(listings2)
```