---
title: "ENUNCIADO  taller Mat3 GIN 2024-2025"
author: "Taller"
lang: es
format:
  html:
    theme: journal
    toc: true
    html-math-method: katex
    css: styles.css
    code-tools: true
    code-fold: true
    collapse: true 
---      

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, message = FALSE,
                      warning = FALSE,cache=FALSE)
# packages
library(tidyverse)
```


# Intrucciones para el taller

Se entrega en grupos que deben de estar constituidos en la actividad de grupos. 
Los grupos  son de 2 o 3 ESTUDIANTES, loa caso especiales consultadlos con el 
profesor para que los autorice.

**Enlaces y Bibliografía**


* [R for data science, Hadley Wickham, Garret  Grolemund.](https://r4ds.had.co.nz/)
* [Fundamentos de ciencia de datos con R.](https://cdr-book.github.io/) 
* [Tablas avanzadas: kable, KableExtra.](https://haozhu233.github.io/kableExtra/awesome_table_in_html.html)
* [Geocomputation with R, Robin Lovelace, Jakub Nowosad, Jannes Muenchow](https://r.geocompx.org/)
* Apuntes de R-basico y tidyverse moodel MAT3.



## Objetivo MALLORCA

Leeremos los siguientes  datos de la zona de etiqueta `mallorca` con el código siguiente: 





```{r}
load("clean_data/mallorca/listing_common0_select.RData")
ls()
str(listings_common0_select)
```

**listings**

Hemos cargado el objeto `listing_common0_select` que contiene los datos de las 4 
muestras de apartamentos de inside Airbnb de Mallorca con unas 15 0 16 variables.

Notemos que cada apartamento:

* queda identificado por id y por date que ns da la muestra en la que apareció el dato.
* así que cada apartamento parece 4 veces ya que hemos elegido solo los apartamentos 
que aparecen en las 4 muestras.
* Las  muestras son `r unique(listings_common0_select$date)`,


```{r}
unique(listings_common0_select$date)
```

**reviews**

Estos datos necesitan  leerse de forma adecuada, las columnas 1,2 y 4 deben ser de tipo `character`
las otras son correctas

```{r}
reviews=read_csv("data/mallorca/2023-12-17/reviews.csv.gz")
str(reviews)
head(reviews)
```

**neighbourhoods.csv**

 Son dos columnas y la primera es una agrupación de municipios (están NA) y la 
 segunda es el nombre del municipio

```{r}
municipios=read_csv("data/mallorca/2023-12-17/neighbourhoods.csv")
str(municipios)
head(municipios)
```

**neighbourhoods.geojson**


Es el mapa de Mallorca, o podemos leer así:

```{r}
library(sf)
library(tmap)

# Leer el archivo GeoJSON
geojson_sf <- sf::st_read("data/mallorca/2024-09-13/neighbourhoods.geojson")

# Crear un mapa

# interactivo
tmap_mode("plot") # Cambiar a modo  view/plot   que es interactivo/estático
tm_shape(geojson_sf) +
  tm_polygons(col = "cyan", alpha = 0.6) +
  tm_layout(title = "Mapa - GeoJSON Mallorca con municipios")
```

Tenéis que consultar en la documentación de  inside Airbnb para saber 
que significad cada variable. Os puede ser útil leer los ficheros 
[DATA_ABB_modelo_de_datos.html](DATA_ABB_modelo_de_datos.html) y 
[DATA_ABB_modelo_de_datos.pdf](DATA_ABB_modelo_de_datos.html)
 en los que se explica  el modelo de datos  de Airbnb y como se cargan
 en el espacio de trabajo.



Responder las siguientes preguntas  como formato Rmarkdown (.Rmd) o quarto (.qmd) y entregad 
la fuente un  fichero en formato html como  salida del informe. 
Se puntúa la claridad de la respuesta, la calidad de la redacción y 
la corrección de la respuesta.



## Pregunta 1 (**1punto**)

Del fichero  con los datos de listings da los estadísticos descriptivos de las variable `price` y de la variable 
`number_of_reviews` agrupados por municipio y por año.

Presenta los resultados con una tabla de kableExtra.



## Pregunta 2 (**1punto**)

 
 Consideremos las variables `price` y `number_of_reviews`  de Pollença y Palma del  perido "2024-09-13", del fichero `listings.csv.gz`. 
 Estudiad si estos datos se aproximan a una distribución normal gráficamente . Para ello, dibujad el histrograma la función kernel que aproxima la desidad y la densidad de la normal de media y varianza las de las muestras de las variables `price` y `number_of_reviews` agrupadas por municipio y por año. 
 
## Pregunta 3 (**1punto**)

 Contrastar si las media del precio en  Pollença  es igual a la de Palma contra que  mayor que 
 en Palma para los precios >50 euros y menores de 400$. 
 Construid la hipótesis nula y  alternativa, calculad el p-valor y elintervalo de confiaza asociado al contraste.
  Justifica tecnicamente la  conclusión del contraste.
 

## Pregunta 4 (**1punto**)

Contrastar si las medias de los precios en Palma  entre los periodos "2023-12-17"  y "2024-03-23" 
son iguales. Construid la hipótesis nula y  alternativa, calculad el p-valor y el intervalo de confianza asociado al contraste. Haced un boxplot


## Pregunta 5 (**1punto**)

Calcular la proporción de apartamentos de la muestra "2024-03-23"   con media de valoración r`eview_scores_rating` mayor que 4 en Palma y en  Pollença son igules contra que son distintas. Construid un intervalo de confianza para la diferencia de proporciones.


## Pregunta 6 (**1punto**)

Calcular la proporción de apartamentos de los periodos "2023-12-17"  y "2024-03-23" con media de valoración `review_scores_rating` mayor que 4 en Palma y en  Pollença son iguales contra que son distintas. Construid un intervalo de confianza para la diferencia de proporciones.


## Pregunta 7 (**1punto**)

La [Zipf's law es una ley empírica](https://en.wikipedia.org/wiki/Zipf%27s_law) que dice que la frecuencia de las palabras en un texto es inversamente proporcional a su rango. Decidid  si la ley se ajusta a los datos de la longitud de los comentarios de los apartamentos de la muestra "2023-12-17"  de Palma. Para ello, haced un análisis de regresión lineal de la frecuencia de las longitudes de los comentarios de los apartamentos de Palma y el rango de las longitudes de los comentarios. Justificad la respuesta.

Como ayuda estudiar el siguiente código, ultilizarlo  y comentarlo.

```{r}
library(stringr)
head(reviews)
length_rewiews=stringr::str_length(reviews$comments)
head(table(length_rewiews))
```

```{r}
aux=table(length_rewiews)
head(aux)
head(names(aux))
tbl=tibble( L=as.numeric(names(aux)),Freq=as.numeric(aux),
            Rank=rank(L),Log_Freq=log(Freq),Log_Rank=log(Rank))
str(tbl)
```

```{r}
tbl2=tbl %>% filter(Rank>10) %>% filter(Rank<1000)
sol1=lm(tbl2$Freq~tbl2$Rank)
summary(sol1)


sol2=lm(tbl2$Freq~tbl2$Log_Rank)
summary(sol2)


sol3=lm(tbl2$Log_Freq~tbl2$Log_Rank)
summary(sol3)


```




